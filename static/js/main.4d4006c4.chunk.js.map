{"version":3,"sources":["DraftLottery.js","TeamInfoForm.js","App.js","registerServiceWorker.js","index.js"],"names":["lastYearColumns","Header","columns","id","accessor","minWidth","resultColummns","remainingTeams","DraftLottery","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","populateLottery","bind","assertThisInitialized","populatePercentages","calculateTotalBalls","draft","state","lotteryResults","previousPick","lottery","lotteryInfo","teamsRemaining","forEach","team","i","balls","push","previousTeamsRemaining","totalBalls","newTeamsRemaining","chance","Math","round","length","pick","floor","random","spot","teamName","newLottery","newLotteryResults","slice","setState","react_default","a","createElement","className","es","defaultSorted","desc","data","defaultPageSize","showPagination","type","onClick","Component","options","label","value","defaultBallsByStanding","TeamInfoForm","handleChange","populateTable","handleTeamNameChange","handleBallsChange","submitTeamInfo","clone","numTeams","teamInfo","object","JSON","parse","stringify","e","thisTeam","concat","finalStanding","target","getAttribute","parseInt","jsx","scope","data-row","onChange","htmlFor","react_select_esm","name","selected","defaultValue","App","src_TeamInfoForm","src_DraftLottery","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4d4006c4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactTable from 'react-table';\nimport PropTypes from 'prop-types';\nimport 'react-table/react-table.css';\n\nconst lastYearColumns = [\n  {\n    Header: 'Last Years\\'s Results',\n    columns: [\n      {\n        Header: 'Standings',\n        id: 'finalStanding',\n        accessor: 'finalStanding'\n      },\n      {\n        Header: 'Team Name',\n        accessor: 'teamName',\n        minWidth: 200\n      },\n      {\n        Header: 'Balls',\n        accessor: 'balls'\n      }\n    ]\n  }\n];\n\nconst resultColummns = [\n  {\n    Header: 'Lottery Results',\n    columns: [\n      {\n        Header: '#',\n        id: 'spot',\n        accessor: 'spot'\n      },\n      {\n        Header: 'Team Name',\n        id: 'teamName',\n        accessor: 'teamName',\n        minWidth: 200\n      }\n    ]\n  }\n];\n\nconst remainingTeams = [\n  {\n    Header: 'Remaining Teams',\n    columns: [\n      {\n        Header: 'Team Name',\n        id: 'teamName',\n        accessor: 'teamName'\n      },\n      {\n        Header: '% Chance of Next Pick',\n        id: 'chance',\n        accessor: 'chance'\n      }\n    ]\n  }\n];\n\nclass DraftLottery extends Component {\n  constructor (props) {\n    super(props);\n    this.populateLottery = this.populateLottery.bind(this);\n    this.populatePercentages = this.populatePercentages.bind(this);\n    this.calculateTotalBalls = this.calculateTotalBalls.bind(this);\n    this.draft = this.draft.bind(this);\n    this.state = {\n      lotteryResults: [],\n      previousPick: {},\n      lottery: this.populateLottery(props.lotteryInfo),\n      teamsRemaining: this.populatePercentages(props.lotteryInfo, this.calculateTotalBalls(props.lotteryInfo))\n    };\n  }\n\n\n  populateLottery (teamsRemaining) {\n    let lottery = [];\n    teamsRemaining.forEach((team) => {\n      for (let i = 0; i < team.balls; i++) {\n        lottery.push(team);\n      }\n    });\n    return lottery;\n  }\n\n  populatePercentages (previousTeamsRemaining, totalBalls) {\n    let newTeamsRemaining = [];\n    previousTeamsRemaining.forEach((team) => {\n      newTeamsRemaining.push(team);\n      team.chance = Math.round((team.balls / totalBalls) * 100);\n    });\n    return newTeamsRemaining;\n  }\n\n  calculateTotalBalls (teamsRemaining) {\n    let totalBalls = 0;\n    teamsRemaining.forEach((team) => {\n      totalBalls += team.balls;\n    });\n    return totalBalls;\n  }\n\n  draft () {\n    if (this.state.teamsRemaining.length > 0) {\n      let pick = this.state.lottery[Math.floor(Math.random() * Math.floor(this.state.lottery.length))];\n      pick.spot = this.state.lotteryResults.length + 1;\n      let newTeamsRemaining = [];\n      this.state.teamsRemaining.forEach((team) => {\n        if (team.teamName !== pick.teamName) {\n          newTeamsRemaining.push(team);\n        }\n      });\n      let newLottery = this.populateLottery(newTeamsRemaining);\n      newTeamsRemaining = this.populatePercentages(newTeamsRemaining, this.calculateTotalBalls(newTeamsRemaining));\n      let newLotteryResults = this.state.lotteryResults.slice(0, this.state.lotteryResults.length);\n      newLotteryResults.push(pick);\n      this.setState({\n        lottery: newLottery,\n        previousPick: pick,\n        teamsRemaining: newTeamsRemaining,\n        lotteryResults: newLotteryResults\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className='row'>\n          <div className='col-12 col-md-4'>\n            <ReactTable className='text-center -striped -highlight' defaultSorted={[{id: 'finalStanding', desc: true}]} data={this.props.lotteryInfo} columns={lastYearColumns} defaultPageSize={this.props.lotteryInfo.length} showPagination={false} />\n          </div>\n          <div className='col-12 col-md-4'>\n            <ReactTable className='text-center -striped -highlight' data={this.state.lotteryResults} columns={resultColummns} defaultPageSize={this.props.lotteryInfo.length} showPagination={false} />\n          </div>\n          <div className='col-12 col-md-4'>\n            <ReactTable className='text-center -striped -highlight' defaultSorted={[{id: 'chance', desc: true}]} data={this.state.teamsRemaining} columns={remainingTeams} defaultPageSize={this.state.teamsRemaining.length} showPagination={false} />\n          </div>\n        </div>\n        <br /><br />\n        <div className='row'>\n          <div className='col-12 text-center'>\n            <button type='button' className='btn btn-primary' onClick={this.draft}>Draft!</button>\n          </div>\n        </div>\n        <br />\n        <div className='row'>\n          <div className='col-12 text-center'>\n            {this.state.previousPick.teamName &&\n            <span>{this.state.previousPick.teamName} won pick #{this.state.previousPick.spot}! They had a {this.state.previousPick.chance}% chance of winning it.</span>\n          }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDraftLottery.propTypes = {\n  lotteryInfo: PropTypes.array\n};\n\nexport default DraftLottery;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactSelect from 'react-select';\n\nconst options= [\n  {\n    label: 8,\n    value: 8\n  },{\n    label: 9,\n    value: 9\n  },{\n    label: 10,\n    value: 10\n  },{\n    label: 11,\n    value: 11\n  },{\n    label: 12,\n    value: 12\n  },{\n    label: 13,\n    value: 13\n  },{\n    label: 14,\n    value: 14\n  }\n];\n\nconst defaultBallsByStanding = [250,199,156,119,88,63,43,28,17,11,8,7,6,5];\n\nclass TeamInfoForm extends Component {\n  constructor(props){\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.populateTable = this.populateTable.bind(this);\n    this.handleTeamNameChange = this.handleTeamNameChange.bind(this);\n    this.handleBallsChange = this.handleBallsChange.bind(this);\n    this.submitTeamInfo = this.submitTeamInfo.bind(this);\n    this.clone = this.clone.bind(this);\n    this.state = {\n      numTeams: 12,\n      teamInfo: []\n    };\n  }\n\n  componentDidMount(){\n    this.handleChange({value: this.state.numTeams});\n  }\n\n  clone (object) {\n    return JSON.parse(JSON.stringify(object));\n  }\n\n  handleChange(e) {\n    if (e.value !== this.state.numTeams || this.state.teamInfo.length === 0){\n      let teamInfo = [];\n      for (let i = 0; i < e.value; i++){\n        let thisTeam = {\n          balls: defaultBallsByStanding[e.value - (i+1)],\n          teamName: `Team ${i+1}`,\n          finalStanding: i + 1\n        };\n        teamInfo.push(thisTeam);\n      }\n      this.setState({\n        numTeams: e.value,\n        teamInfo: teamInfo\n      });\n    }\n  }\n\n  handleTeamNameChange(e) {\n    let teamInfo = this.clone(this.state.teamInfo);\n    teamInfo[e.target.getAttribute('data-row')].teamName = e.target.value;\n    this.setState({\n      teamInfo: teamInfo\n    });\n  }\n\n  handleBallsChange(e) {\n    let teamInfo = this.clone(this.state.teamInfo);\n    teamInfo[e.target.getAttribute('data-row')].balls = parseInt(e.target.value);\n    this.setState({\n      teamInfo: teamInfo\n    });\n  }\n\n  populateTable() {\n    let jsx = [];\n    for (let i = 0; i < this.state.teamInfo.length; i++) {\n      jsx.push(\n        <tr>\n            <th scope='row'>{this.state.teamInfo[i].finalStanding}</th>\n            <td><input data-row={i} type='text' value={this.state.teamInfo[i].teamName} onChange={this.handleTeamNameChange}/></td>\n            <td><input data-row={i} type='number' value={this.state.teamInfo[i].balls} onChange={this.handleBallsChange}/></td>\n        </tr>\n      );\n    }\n    return (<tbody>{jsx}</tbody>);\n  }\n\n  submitTeamInfo(){\n    this.props.submitTeamInfo(this.state.teamInfo);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className='row pb-4'>\n          <h5 className='col-12 text-center'>Enter last year&apos;s standings, tweak lottery settings, and click Submit</h5>\n        </div>\n        <div className='row pb-4'>\n          <label htmlFor='numTeamsDropdown' className='col-4 col-md-2 offset-md-3'>Number of Teams:</label>\n          <ReactSelect name='numTeamsDropdown' className='col-4 col-md-2' options={options} selected={this.state.numTeams} defaultValue={{label: 12, value: 12}} onChange={this.handleChange} />\n          <div className='col-4 col-m2-2'><button type='button' className='btn btn-primary float-right' onClick={this.submitTeamInfo}>Submit</button></div>\n        </div>\n        <div className='row'>\n          <table className='table col-12 col-md-6 offset-md-3'>\n            <thead>\n              <tr>\n                <th scope='col'>Standings</th>\n                <th scope='col'>Team Name</th>\n                <th scope='col'>Lottery Balls</th>\n              </tr>\n            </thead>\n            {this.populateTable()}\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nTeamInfoForm.propTypes = {\n  submitTeamInfo: PropTypes.func\n};\n\nexport default TeamInfoForm;\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport DraftLottery from './DraftLottery';\nimport TeamInfoForm from './TeamInfoForm';\n\nclass App extends Component {\n  constructor (props) {\n    super(props);\n    this.submitTeamInfo = this.submitTeamInfo.bind(this);\n    this.state = {\n      lotteryInfo: null\n    };\n  }\n\n  submitTeamInfo (teamInfo) {\n    this.setState ({ lotteryInfo: teamInfo });\n  }\n\n  render () {\n    return (\n      <div className='container-fluid'>\n        <div className='row'>\n          <h1 className='col-12 jumbotron text-center'>\n            Fantasy Draft Lottery\n          </h1>\n        </div>\n        {!this.state.lotteryInfo &&\n          <TeamInfoForm submitTeamInfo={this.submitTeamInfo} />\n        }\n        {this.state.lotteryInfo &&\n          <DraftLottery lotteryInfo={this.state.lotteryInfo}/>\n        }\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}